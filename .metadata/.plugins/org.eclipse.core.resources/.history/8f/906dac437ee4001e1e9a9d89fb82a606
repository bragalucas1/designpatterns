package atividade2;
import java.util.Iterator;
import java.util.List;

public class ItFunctions {
	
	static int findMax(Iterable<Integer> list) {
		Iterator<Integer> it = list.iterator();
		int maxValue = Integer.MIN_VALUE;
		while(it.hasNext()) {
			int currentIterable = it.next();
			if(currentIterable > maxValue) {
				maxValue = currentIterable;
			}
		}
		return maxValue;
	}
	
	static <E> int numOccurences(Iterable<E> list, E e) {
		Iterator<E> it = list.iterator();
		int counter = 0;
		while(it.hasNext()) {
			E currentValue = it.next();
			if(currentValue == e) {
				counter++;
			}
		}
		return counter;
	}
	
	static boolean isNonDecreasing(List<Integer> list) {
		Iterator<Integer> it = list.iterator();
		int previous = it.next();
		while(it.hasNext()) {
			int currentValue = it.next();
			if(currentValue < previous) return false;
			previous = currentValue;
		}
		return true;
	}
}
